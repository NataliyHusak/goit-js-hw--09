{"mappings":"YAEA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAXYO,SAASC,cAAc,SAe/BC,iBAAiB,UAAU,SAAAC,GACpCA,EAAMC,iBAKN,IAJA,IAAMX,EAAQY,OAAOF,EAAMG,OAAOC,SAASd,MAAMe,OAC3CC,EAAOJ,OAAOF,EAAMG,OAAOC,SAASE,KAAKD,OACzCE,EAASL,OAAOF,EAAMG,OAAOC,SAASG,OAAOF,OAE1CG,EAAI,EAAGA,GAAKD,EAAQC,IAC3BpB,EAAcoB,EAAGlB,EAAQkB,EAAIF,GAC1BG,MAAK,SAAAC,GACJC,QAAQC,IAAI,uBAA4CC,OAAnBH,EAAIrB,SAAS,QAAgBwB,OAAVH,EAAIpB,MAAM,M,IAEnEwB,OAAM,SAAAC,G,OACLJ,QAAQC,IAAI,sBAAyCC,OAAnBE,EAAI1B,SAAS,QAAgBwB,OAAVE,EAAIzB,MAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["const submitForm = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nsubmitForm.addEventListener('submit', event => {\n  event.preventDefault();\n  const delay = Number(event.target.elements.delay.value);\n  const step = Number(event.target.elements.step.value);\n  const amount = Number(event.target.elements.amount.value);\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay + i * step)\n      .then(res => {\n        console.log(`✅ Fulfilled promise ${res.position} in ${res.delay}ms`);\n      })\n      .catch(err =>\n        console.log(`❌ Rejected promise ${err.position} in ${err.delay}ms`)\n      );\n  }\n});\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","Number","target","elements","value","step","amount","i","then","res","console","log","concat","catch","err"],"version":3,"file":"03-promises.a6e46a9b.js.map"}